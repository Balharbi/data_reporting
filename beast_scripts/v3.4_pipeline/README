This pipeline takes the output of Adi's or *_2primer3 scripts which is the 
masked genome and primer3 output

v3.4 (Feb 2017) 
for eIF4A3 project - NMD validation (v1 - works well!)

1. 	Input is from /home/dyap/Projects/eIF4A3/design.csv
	Generated manually (selectively) or all (automatically) using the R-script, Plot_NMD-compare.R
	then use design_NMD_primers.sh to generate this from the isoform.fa file from Alborz
	Format of csv:
POLR1A_ENST00000409024,ATTCCTCCCGAATTTCAGAGGCAGAGGGATCGGGATTTTCTTCCAGAAATTGAGCTCTTCAGCCGAATACATCCCGAAGGAAATGCCCTGCAGCCGCCGCCAGGGCATGTTCTTGGAGATCAACAT,127

2. 	NMD_2primer3.sh
	- return 10 primers to see if I can get primers which are specific for transcripts

3.	v3.4_batch-spliceRT.sh

4.      v3.4_inSilicoPcrRT.sh
	- get each record one at a time to prevent overlapping primers assigned to work target
	- use new command "awk -v n=4 '/^=$/{l++} l>n{exit} l==n' $name_primer3_output.txt"

5.	v3.4_primer_summaryRTN.sh (runs part ii automatically from within script)
	v3.4_primer_summaryRT2.sh (part ii) <- can be run in parts for debugging

	- Using TRANSCRIPTOME (v19_Gencode), instead of using the hg19 genomic sequence
	-  somehow .fa was read as a binary file - use grep -a to force ASCII matches for grep
	(completely rewritten)

	-  need to select unique transcripts but very few of them meet criteria
	-  those that are not unique but can be distinguished by length (set2.txt)
	-  there is no MiSeq checking (if it amplifies, we can sequence identify it whatever the length)

	- gets unique transcripts (if only one transcripts amplified by isPCR and length is correct - that is the one)
	- eliminates all the transcripts which have different lengths, and if there is only one transcript left and 
	  one transcripts has the correct amplicon length, then the correct amplicon can be distinguished on the basis of length

	- outputs
		a. HTML (amplicon only + for those where discrimiation is by length, the other amplicons)
		b. supplemental figure data
		c. primer order file
		(deleted the failed primer file, as it will be useless in this case, we are not interested in the failed positions)
		d. allfile (contains all the transcripts short-listed and displayed in the html file)

	-manual step
		a. copy allfile to positions directory as $name_selected_positions.txt
		b. inspect the amplicons and choose the one which you want to select. 
		c. deleted the others from $name_selected_positions.txt
		d. run the script v3.4_selected_RT.sh

6.	v3.4_selected_RT.sh
		a. gets the selected list of primers and generates the file for IDT ordering
		b. generates the filtered amplicon manifest
		c. generates the filtered primer list for the supplemental file

	(current state - 24 Feb 2017 PM)
		- fixed transcripts

	

============================

v3.3 (Oct 2015) updated Mar 2016
For T3 paper review

spliceRT_2primer3.sh
for RT-PCR (isPCR on genomic but not QC-ed as introns also included)
spliceRT2,3_2primer3.sh
for RT-PCR (isPCR on transcriptome which is supplied as a fasta file)

1. name="Splice-RT", RT2, RT3 etc.
2. Tyler gave an output where the sequence of DOMAIN of the factors enriched in CG formation was [bracketed]
3. This was used to generate a primer3 input file which was fed into the pipeline
4. with one automatic reiteration of the primer3 conditions for the less stringent

if bracket region > 300, then only use that region if not use the whole sequence
and mark the [bracketed] region with start and end (if <100 bp, else use only first [bracket and +20 bp window)
-need to change the before and after lines for the grep for each of the conditions

also amended the pipline to all RT (but for CG factors so isPCR is okay just no annotation and SNVs)
- moved annotation model from display pipeline to the primer summary to get the positions from the isPCR as a check since I cannot QC any other way

need to check also that splice variants are taken into consideration
modified to remove all non essential fields as design file only has id and seq

**v3.3_inSilicoPcrRT.sh**
**Main improvement is that TRANSCRIPTOME (v19_Gencode) is used instead of using the hg19 genomic sequence


=========

v3.3 (9 Feb - XX Feb 2015)
v3.3_batch-splice2.sh for Arusha/Takeda Splice Signature testing

1. Also use the custom genome for specific splice events (two types see Wiki)
2. Use whole sample ID as Chromosome
3. Annotation is left OFF

4. use v3.3_display_pipeline2.sh

4. Change primer summary to accommodate format of splice joins which uses : as separator
5. Change primer summary to consider the middle of the start and end coordinates as the breakpoint and calculate 

v3.3 (28 Apr - 4 May 2014)
v3.3 (11 Mar - XX Mar 2016)
v3.3_batch-splice1.sh for Arusha/Takeda run-on splicing Project 
v3.3_batch-spliceCG.sh for generating a new CG panel based on better higher enrichment of motifs

Preprocessing taken care of my using the script splice1_2primer3.sh
Preprocessing taken care of my using the script spliceCG_2primer3.sh

1. This uses a custom genome for specific run-on projects!!!
2. Sample_ID are differently formatted
3. Turn Annotation OFF
4. De novo generate position file (do not use GetSeq.R)
5. Change primer summary to accommodate format of splice joins which uses : as separator
6. Change primer summary to consider the middle of the start and end coordinates as the breakpoint and calculate 
   miseq coverage from there
7. Annotation will fail as no annotation is done (already encoded in the name)

After manual selection of the primers and amplicons, a text file with headers (comma delimited) is created with the 
selected list. This is saved in Splice/positions/selected_positions.txt

The following script is run to add adaptors to the selected primers and generate the order file (sheet for left and right primers
and filtered ampliconmanifest. The script is selected.sh

TO DO
generate the supplemental figure file


v3.1
ouputs the N masked sequence in addition to the amplicon

v3.1_batch-Rev.sh for Peter's paper Reviews
v3.1_batch-SS.sh for Jas's Single Cell Project


v3
checks insilico PCR, annotates and displays for checking...

15 Oct 2013
Damian Yap
