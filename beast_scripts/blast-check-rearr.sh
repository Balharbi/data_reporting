#!/bin/sh

# This Script was written by Damian Yap (Jun 2013)

# If script is called within a programme comment these lines
# If not, $exportname would be exported with export 

name="SVs_selected"

dir="/home/dyap/Projects/Tumour_Evol/Rearrangements"

# Generate the database to blast against (ie WT sequence that I calculated 
# 400 bp upstream of break1 and 400bp downstream of break 2 - GetSeqArranged_PE.R)
# For complex and interchromosomal rearragements I need to use the chimeric seq
# This was generated by bioinformatics

#cat $dir/$name"_designspace.csv" | awk -F, '{print ">"$3"\n"$9}' | tr -d '"' > ~/blast/db/$name.arr.fsa
# manually corrected duplicates

# Make database with command
makeblastdb -in ~/blast/db/$name.arr.fsa -parse_seqids -dbtype nucl

#check that there are no self-hit in the custom database with this command
cd ~/blast/db
blastdbcmd -entry all -db $name.arr.fsa -dbtype nucl -outfmt %g | head -1 |   tee exclude_me

echo "This should check that the database is correctly written and that there are no" 
echo "self hits - if there are no errors N/A should be returned"

read ans

# Use the output from design space to generate the files to query with
# The output of this has to be in fasta format with cluster_id as the main 
# discriminator

cd $dir

cat $name"_designspace.csv" | tr -d "<" | tr -d ">" > $name"_blastspace.csv"
cat $name"_blastspace.csv" | awk -F, '{print ">"$3"_up\n"$6}' | tr -d '"' > $name.query.fa
cat $name"_blastspace.csv" | awk -F, '{print ">"$3"_down\n"$7}' | tr -d '"' >> $name.query.fa
cat $name"_blastspace.csv" | awk -F, '{print ">"$3"_myseq\n"$8}' | tr -d '"' >> $name.query.fa
cat $name"_blastspace.csv" | awk -F, '{print ">"$3"_chimeric\n"$9}' | tr -d '"' >> $name.query.fa

blastn -query $name.query.fa -db ~/blast/db/$name.arr.fsa -out $name.blast.txt
# blastn -query $name.query.fa -db human_genomic -out $name.genoblast.txt

in=$dir"/"$name".blast.txt"
out=$dir"/"$name"_blast"

# This gets all the Blast query headers
# incl those with no hits in database
	grep ^Query $in > $out.tmp

	echo $out.tmp

# This gets only those with alignment lines and the line before
# which from the temp file can only be another alignment or
# the query header (this drops any queries with no hits!)

	grep "Query " -B1 $out.tmp > $out.aln

	echo $out.aln

	grep "Query=" $out.aln > $out.aln.tmp

	echo $out.aln.tmp




exit;


