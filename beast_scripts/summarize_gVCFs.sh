#!/bin/bash

# Script to summarise genomic VCFs generated by
# Miseq Reporter 2.3.32

# Damian Yap 6 Mar 2014
# For IntClust Data

# Features
# Reads gVCFs (format output by MSR 2.3.32)
# pos=$2, rs=$3, ref=$4, alt=$5, totalcoverage=(DP=)$8, altfreq=$10,$4
# reads AD (allele depth, if there is variant, then it outputs two values separated by comma)

run="140127_M02348_0019_000000000-A7DWM"
fname="F"
project="IntClust"

# Lustre / Beast
dir="/share/lustre/archive/MiSeq/MiSeq_Analysis_Files/"$run"/Data/Intensities/BaseCalls/Alignment"

cd $dir

rm *".genome.csv"
gvcf=`ls $fname*.*genome.vcf`

echo $gvcf

for i in $gvcf
	do

	for j in `cat $gvcf | awk -F"\t" '{print $2}' | sort -u | uniq`

		do
		match="\t"$j"\t"
		sam=`echo $i | awk -F"_" '{print $1}'`

		# Subroutine to handle artifacts (need to manually configure)

			if [[ "$j" == "random_stuff" || "$j" == "other-random-stuff" ]];
				then

				ref=`grep -P -m2 $match $i | tail -n1 | awk -F"\t" '{print $4}' | tr "," ";"`

				if [[ $ref == "" ]];
					then
						ref="No Coverage"
				fi
				alt=`grep -P -m2 $match $i | tail -n1 | awk -F"\t" '{print $5}' | tr "," ";"`
				ad=`grep -P -m2 $match $i | tail -n1 | awk -F"\t" '{print $10}' | awk -F: '{print $3}' | tr "," ";"`

				cov=`grep -P -m2 $match $i | awk -F"\t" '{print $8}' | sed 's/DP=//g'`

#		if [[ $alt != "." ]];
#			then
#		acv=`echo "$afq * $cov" | bc | awk '{printf "%.0f\n", $1}'`
#			else	acv=""
#		fi

				else

				ref=`grep -P $match $i | awk -F"\t" '{print $4}'`

					if [[ $ref == "" ]];
						then
						ref="No Coverage"
					fi
				alt=`grep -P $match $i | awk -F"\t" '{print $5}'`
				ad=`grep -P $match $i | awk -F"\t" '{print $10}' | awk -F: '{print $3}'`
				cov=`grep -P $match $i | awk -F"\t" '{print $8}' | sed 's/DP=//g'`

			fi

		echo $sam"_"$j","$ref","$alt","$ad
		#echo $j","$ref","$alt","$ad >> $sam"genome.csv"
		done
	echo "+++++++++++++++++++++++++++++++++++++++++++++"

	echo "        End of sample :    "$sam

	echo "+++++++++++++++++++++++++++++++++++++++++++++"

	done
