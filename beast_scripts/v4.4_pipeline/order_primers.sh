#!/bin/sh

# This Script was written by Damian Yap (Apr 2013, upgraded Dec 2014)
# To filter and add specific adaptors to primer3 generated primers for MiSeq
# Generate the order file and filtered AmpliconManifest


################################################################
# The main project file, input and output directories
project="cellmix"
tmp="/home/dyap/dyap_temp/vcf"
dir="/home/dyap/public_html/"$project
srcdir="/home/dyap/Projects/PrimerDesign/cellmix/selected"
p3dir=$srcdir

# This is the name of the design file and directory of the same name 
#name="SA036_HCT116-selected.vcf.txt"
#name="SA040_HTERTL2-selected.vcf.txt"
# For Shared positions
#name="L2-H-shared-masked_check"
name="SA036+40_L2-HCT-selected.vcf.txt"
wd=$dir"/"$name

# This is the list of the positions selected by manual inspection
#SAID=`echo $name | awk -F"_" '{print $1}'`
# For Shared positions
SAID="SA036+SA040"
#SAID="SA036++SA040"
#sourcefile=$srcdir"/Mixing_pos"
# For Shared positions
sourcefile=$srcdir"/Shared_pos2"
type="Ill" 			# Ill OR Fld only
#amplength=200
amplength=250
expt="ss"
setname=$project"."$SAID"."$amplength"."$expt
################################################################


# This is the output of pipeline
# usually "_primer_order.txt"
ffile=$name"_primer_order.txt"
pattern=$tmp"/pattern"
primerfile=$wd"/"$ffile
orderleft=$p3dir"/"$setname"-"$type"-leftprimers.csv"
orderright=$p3dir"/"$setname"-"$type"-rightprimers.csv"

						echo "WellPosition,Name,Sequence,Notes" > $orderleft
						echo "WellPosition,Name,Sequence,Notes" > $orderright


rm -fr $orderfile


	if [[ $type == "Ill" ]]
		then
		# Illlumina Adaptors (5'->3')
		fa="TCGTCGGCAGCGTCAGATGTGTATAAGAGACAG"
		ra="GTCTCGTGGGCTCGGAGATGTGTATAAGAGACAG"
	fi

	if [[ $type == "Fld" ]]
		then	
		# Forward adaptor for Fluidigm
		fa="ACACTGACGACATGGTTCTACA"
		# Reverse adaptor for Fluidigm (5'->3')
		ra="TACGGTAGCAGAGACTTGGTCT"
	fi

# If file has a NO header (manual input)
cat $sourcefile | awk -F"\t" '{print $1}'  > $pattern
# If file has a NO header (selected using grep)
# grep $SAID $sourcefile | awk -F"\t" '{print $1}' > $pattern
# IF file is generated by a script (header and formatted)
# cat $sourcefile | tail -n +2 | awk -F"\t" '{print $1}' > $pattern

# Counters
alpha="A"
count=1
plate=1
		for i in `cat $pattern`

		do
		echo $i
		echo $primerfile
# Check the positions of these in the input file ALWAYS!!!!

		label=`grep -m1 $i $primerfile | awk -F"," '{print $1}'`
		left0=`grep -m1 $i $primerfile | awk -F"," '{print $6}'`
		right0=`grep -m1 $i $primerfile | awk -F"," '{print $8}'`


		echo $label,$left0,$right0

				if [[ $alpha == "I" ]]; 
					then 	alpha="A"
						plate=$((plate+1))
						orderleft=$p3dir"/"$setname"-L"$plate".csv"
						orderright=$p3dir"/"$setname"-R"$plate".csv"

						echo "WellPosition,Name,Sequence,Notes" > $orderleft
						echo "WellPosition,Name,Sequence,Notes" > $orderright

				fi

			if [[ $left0 != "" ]];
			
				then

				if [[ $right0 != "" ]];
			
					then

						if [[ $count -lt 10 ]];
							then 
								welpos=$alpha"0"$count
							else
								welpos=$alpha$count
						fi

						echo "Adding adaptors to sequences..."
						echo $welpos","$label"_L,"$fa$left0 >> $orderleft
						echo $welpos","$label"_R,"$ra$right0 >> $orderright

#						echo "Filtering AmpliconManifest"
#						grep ^$i -m1 $oldmanifest | awk -F"\t" '{print $1"\t"$2"\t"$3"\t"$4"\t"$5"\t"$6}' | sed 's/chr//' >> $newmanifest.tmp

				fi
			fi

			count=$((count+1))

			if [[ $count == 13 ]];
				then 
				count="1"


				if [[ $alpha == "H" ]]; then alpha="I"; fi
				if [[ $alpha == "G" ]]; then alpha="H"; fi
				if [[ $alpha == "F" ]]; then alpha="G"; fi
				if [[ $alpha == "E" ]]; then alpha="F"; fi
				if [[ $alpha == "D" ]]; then alpha="E"; fi
				if [[ $alpha == "C" ]]; then alpha="D"; fi
				if [[ $alpha == "B" ]]; then alpha="C"; fi
				if [[ $alpha == "A" ]]; then alpha="B"; fi
				if [[ $alpha == "next" ]]; then alpha="A"; fi


			fi

		
		done

rm -f $p3dir/*.tmp
			
echo "done."
exit;
